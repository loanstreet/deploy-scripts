---
kind: pipeline
name: java

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: loanstreet-ubuntu-19.04/java:8
    volumes:
      - name: ssh
        path: /root/.ssh
      - name: maven
        path: /root/.m2
    commands:
      - service ssh start
      - sh ./tests/java.sh

volumes:
  - name: ssh
    host:
      path: /root/.ssh
  - name: maven
    host:
      path: /dronetmp/m2

---
kind: pipeline
name: rust

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: rust:1.53.0-alpine
    volumes:
      - name: ssh
        path: /root/.ssh
      - name: target
        path: /drone/src/target
    commands:
      - service ssh start
      - sh ./tests/actix.sh
    when:
      branch: add_actix_deployment

volumes:
  - name: ssh
    host:
      path: /root/.ssh
  - name: target
    host:
      path: /dronetmp/rust-target

---
kind: pipeline
name: rails

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: loanstreet-ubuntu-20.04/ruby:2.6.3
    volumes:
      - name: ssh
        path: /root/.ssh
      - name: bundler
        path: /drone/bundler
    commands:
      - ln -sf /drone/bundler /tmp/bundle
      - service ssh start
      - sh ./tests/rails.sh


volumes:
  - name: ssh
    host:
      path: /root/.ssh
  - name: bundler
    host:
      path: /dronetmp/ruby-2.5.3/bundle

---
kind: pipeline
name: django

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: loanstreet-ubuntu-20.04/python:3.7
    volumes:
      - name: ssh
        path: /root/.ssh
    commands:
      - service ssh start
      - sh ./tests/django.sh


volumes:
  - name: ssh
    host:
      path: /root/.ssh

# ---
# kind: pipeline
# name: php-html

# platform:
#   os: linux
#   arch: amd64

# steps:
#   - name: test
#     image: php:7.3-alpine-ci
#     volumes:
#       - name: ssh
#         path: /root/.ssh
#     commands:
#       - /usr/sbin/sshd -e
#       - sh ./tests/php.sh


# volumes:
#   - name: ssh
#     host:
#       path: /root/.ssh

---
kind: pipeline
name: node

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: loanstreet-node:10.20.0
    volumes:
      - name: ssh
        path: /root/.ssh
    commands:
      - service ssh start
      - sh ./tests/node.sh


volumes:
  - name: ssh
    host:
      path: /root/.ssh

---
kind: pipeline
name: kubernetes

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: loanstreet-ubuntu-20.04/kube:1.20
    volumes:
      - name: ssh
        path: /root/.ssh
      - name: kube
        path: /root/.kube
      - name: docker
        path: /root/.docker
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - service ssh start
      - sh ./tests/kubernetes.sh


volumes:
  - name: ssh
    host:
      path: /root/.ssh
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: kube
    host:
      path: /root/.kube
  - name: docker
    host:
      path: /root/.docker

---
kind: pipeline
name: build

platform:
  os: linux
  arch: amd64

steps:
  - name: 0.6.0
    image: loanstreet-ubuntu-20.04/docker:19
    volumes:
      - name: ssh
        path: /root/.ssh
      - name: docker
        path: /root/.docker
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build --build-arg DS_VERSION=0.6.0 -t finology/deploy-scripts:latest .
      - docker --config $HOME/.docker/hub push finology/deploy-scripts:latest
    when:
      branch: 0.6.0
      event: push

  - name: testing
    image: loanstreet-ubuntu-20.04/docker:19
    volumes:
      - name: ssh
        path: /root/.ssh
      - name: docker
        path: /root/.docker
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build --build-arg DS_VERSION=master -t finology/deploy-scripts:testing .
      - docker --config $HOME/.docker/hub push finology/deploy-scripts:testing
    when:
      branch: master
      event: push

volumes:
  - name: ssh
    host:
      path: /root/.ssh
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: docker
    host:
      path: /root/.docker

# ---
# kind: pipeline
# name: test-docker

# platform:
#   os: linux
#   arch: amd64

# steps:
#   - name: test-docker
#     image: loanstreet-ubuntu-20.04/docker:19
#     volumes:
#       - name: ssh
#         path: /root/.ssh
#       - name: dockersock
#         path: /var/run/docker.sock
#     commands:
#       - service ssh start
#       - sh ./tests/docker.sh


# volumes:
#   - name: ssh
#     host:
#       path: /root/.ssh
#   - name: dockersock
#     host:
#       path: /var/run/docker.sock
#
# ---
# kind: pipeline
# name: test-reactjs

# platform:
#   os: linux
#   arch: amd64

# steps:
# - name: test-reactjs
#   image: loanstreet-ubuntu-20.04/node:13
#   volumes:
#   - name: ssh
#     path: /root/.ssh
#   - name: tmpdir
#     path: /tmp/phantomjs
#   commands:
#   - . ~/.profile
#   - service ssh start
#   - sh ./tests/reactjs.sh


# volumes:
# - name: ssh
#   host:
#     path: /root/.ssh
# - name: tmpdir
#   host:
#     path: /dronetmp/tmp
...
